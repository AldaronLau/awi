// lib/input/keyboard/msg.rs
// Graphical Software Packager
// Copyright 2017 (c) Aldaron's Tech
// Copyright 2017 (c) Jeron Lau
// Licensed under the MIT LICENSE

#[derive(PartialEq)]
#[derive(Copy, Clone)]
pub enum Align {
	Left,
	Middle,
	Right,
	Justify,
}

#[derive(PartialEq)]
#[derive(Copy, Clone)]
pub enum Emphasis {
	/// Strikethrough
	StrikeOut,
	/// Overline
	Overline,
	/// Underline Continuous
	Underline,
	/// Underline Discontinuous
	UnderlineDC,
	/// Double Underline
	UnderlineX2,
	/// Invert Colors
	InvertColor,
	/// Bold
	Bold,
	/// Italic
	Italic,
	/// Regular
	None,
}

#[derive(PartialEq)]
#[derive(Copy, Clone)]
pub enum Msg {
	Align(Align),
	Emphasis(Emphasis),
	Select,
	Copy,
	Cancel,
	Delete,
	Find,
	Help,
	Info,
	/// This message is generated by a request to exit the current screen.
	/// A request to exit the current screen is defined as,
	///
	/// - pressing escape on a keyboard
	/// - pressing the back key on a cell phone.
	Back,
	/// This message is generated by a request to exit the app.
	/// A request to ext the app is defined as,
	///
	/// - clicking the 'X' button on the app's window
	/// - typing the keyboard shortcut Ctrl-Q
	Quit,
	Close,
	Open(Option<&'static str>),
	SaveAs,
	Undo,
	Redo,
	Cut,
	Paste,
	Print,
}

impl ::std::fmt::Display for Msg {
	fn fmt(&self, f: &mut ::std::fmt::Formatter) -> ::std::fmt::Result {
		use Msg::*;

		match *self {
			Align(_) => write!(f, "Align"),
			Emphasis(_) => write!(f, "Emphasis"),
			Select => write!(f, "Select"),
			Copy => write!(f, "Copy"),
			Cancel => write!(f, "Cancel"),
			Delete => write!(f, "Delete"),
			Find => write!(f, "Find"),
			Help => write!(f, "Help"),
			Info => write!(f, "Info"),
			Back => write!(f, "Back"),
			Quit => write!(f, "Quit"),
			Close => write!(f, "Close"),
			Open(_) => write!(f, "Open..."),
			SaveAs => write!(f, "Save As..."),
			Undo => write!(f, "Undo"),
			Redo => write!(f, "Redo"),
			Cut => write!(f, "Cut"),
			Paste => write!(f, "Paste"),
			Print => write!(f, "Print"),
		}
	}
}
